{"version":3,"sources":["components/Slot.js","components/Bingo.js","components/App.js","index.js"],"names":["Slot","props","slotRender","state","number","clearIntervalCb","setInterval","setState","slot10","slotNumber","slot1","className","style","height","fontSize","color","clearInterval","tens","Math","floor","ones","render","maxNum","random","React","Component","renderBi","data","begin","end","toggleState","filter","d","index","map","open","key","onClick","Bingo","toggle","initState","slotState","bingoState","numberLog","APP_KEY","App","restoreLocalStorage","appState","localStorage","getItem","JSON","parse","saveLocalStorage","setTimeout","setItem","stringify","componentDidMount","setInitState","tempState","i","push","clearState","window","confirm","getOpenState","getCloseState","clickHandler","closeState","length","audioElm","Audio","src","play","numberSelect","console","log","content","toggleIndex","parseInt","target","textContent","this","width","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.7659da85.chunk.js","sourcesContent":["import React from 'react';\n\nclass Slot extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {slot10: 0, slot1: 0, clearIntervalCb: null}\n    }\n\n    slotNumber(maxNum) {\n        return Math.floor(Math.random()*maxNum);\n    }\n\n    slotRender = ({state, number}) => {\n        if(state === 'slotting') {\n            if(this.state.clearIntervalCb === null) {\n                const clearIntervalCb = setInterval(() => {\n                    this.setState({slot10: this.slotNumber(8), slot1: this.slotNumber(10)});\n                }, 50);\n        \n                this.setState({clearIntervalCb});\n            }\n            return (\n                <>\n                    <div className=\"card purple darken-1 col s2\" style={{height: '200px', fontSize: '100pt', color: '#FFF'}}>\n                        {this.state.slot10}\n                    </div>\n                    <div className=\"card purple darken-1 col s2\" style={{height: '200px', fontSize: '100pt', color: '#FFF'}}>\n                        {this.state.slot1}\n                    </div>\n                </>\n            );\n        } else {\n            if(this.state.clearIntervalCb) {\n                clearInterval(this.state.clearIntervalCb);\n                this.setState({clearIntervalCb: null});\n            }\n            const tens = (number === null) ? 0: Math.floor((number+1)/10);\n            const ones = (number === null) ? 0: (number+1)%10;\n            return (\n                <>\n                    <div className=\"card purple darken-1 col s2\" style={{height: '200px', fontSize: '100pt', color: '#FFF'}}>\n                        {tens}\n                    </div>\n                    <div className=\"card purple darken-1 col s2\" style={{height: '200px', fontSize: '100pt', color: '#FFF'}}>\n                        {ones}\n                    </div>\n                </>\n            );\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"row\">\n                <div className=\"col s4\"></div>\n                {this.slotRender(this.props)}\n                <div className=\"col s4\"></div>\n                {/* <div>\n                    {JSON.stringify(this.props)}\n                </div>\n                <div>\n                    {JSON.stringify(this.state)}\n                </div> */}\n            </div>\n        );\n    }\n};\n\nexport default Slot;","import React from 'react';\n\nconst renderBi = (data, begin, end, toggleState) => {\n    return data.filter(d => d.index >= begin && d.index < end).map(d => {\n        if(d.open) {\n            return (\n                <button\n                    className=\"btn-floating btn-large waves-effect waves-light red\"\n                    style={{fontSize: \"24px\"}}\n                    key={d.index}\n                    onClick={toggleState}\n                    >{d.index+1}\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"btn-floating btn-large waves-effect waves-light blue lighten-4\"\n                    style={{fontSize: \"24px\", color: '#1e88e5'}}\n                    key={d.index}\n                    onClick={toggleState}\n                    >{d.index+1}\n                </button>\n            );\n        }\n    })\n}\n\nconst Bingo = props => {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col s1\">\n                    <button className=\"btn-floating btn-large waves-effect waves-light purple darken-1\" style={{fontSize: \"24px\"}}>B</button>\n                </div>\n                <div className=\"col s11\">\n                    {renderBi(props.open, 0, 15, props.toggle)}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s1\">\n                    <button className=\"btn-floating btn-large waves-effect waves-light purple darken-1\" style={{fontSize: \"24px\"}}>I</button>\n                </div>\n                <div className=\"col s11\">\n                    {renderBi(props.open, 15, 30, props.toggle)}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s1\">\n                    <button className=\"btn-floating btn-large waves-effect waves-light purple darken-1\" style={{fontSize: \"24px\"}}>N</button>\n                </div>\n                <div className=\"col s11\">\n                    {renderBi(props.open, 30, 45, props.toggle)}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s1\">\n                    <button className=\"btn-floating btn-large waves-effect waves-light purple darken-1\" style={{fontSize: \"24px\"}}>G</button>\n                </div>\n                <div className=\"col s11\">\n                    {renderBi(props.open, 45, 60, props.toggle)}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s1\">\n                    <button className=\"btn-floating btn-large waves-effect waves-light purple darken-1\" style={{fontSize: \"24px\"}}>O</button>\n                </div>\n                <div className=\"col s11\">\n                    {renderBi(props.open, 60, 75, props.toggle)}\n                </div>\n            </div>\n            {/* <div>{JSON.stringify(props.open.filter(d=>d.open))}</div> */}\n        </div>\n    );\n};\n\nexport default Bingo;","import React from 'react';\n\nimport Slot from './Slot';\nimport Bingo from './Bingo';\n\nconst initState = {slotState: 'done', number: null, bingoState: [], numberLog: []};\nconst APP_KEY = 'bingo-machine-da1-v0';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {...initState};\n    }\n\n    restoreLocalStorage = () => {\n        const appState = localStorage.getItem(APP_KEY);\n        if( appState ) {\n            this.setState({...JSON.parse(appState)});\n        }\n    }\n\n    saveLocalStorage = () => {\n        setTimeout(() => {\n            localStorage.setItem(APP_KEY, JSON.stringify(this.state));\n        }, 5);\n    }\n\n    componentDidMount = () => {\n        this.setInitState();\n        this.restoreLocalStorage();\n    }\n\n    setInitState = () => {\n        const tempState = [];\n        for(let i=0; i<75; i++) {\n            tempState.push({open: false, index: i});\n        }\n        this.setState({bingoState: [...tempState]});\n    }\n\n    clearState = () => {\n        if(window.confirm('結果を全て消去してやり直して良いですか？')) {\n            this.setState({...initState});\n            this.setInitState();\n            this.saveLocalStorage();\n        }\n    }\n\n    getOpenState = () => {\n        return this.state.bingoState.filter(d => d.open);\n    }\n\n    getCloseState = () => {\n        return this.state.bingoState.filter(d => !d.open);\n    }\n\n    clickHandler = () => {\n        if(this.state.slotState !== 'slotting') {\n            const closeState = this.getCloseState();\n\n            if(closeState.length !== 0) {\n                const audioElm = new Audio();\n                audioElm.src = 'se_maoudamashii_instruments_drumroll.mp3';\n                audioElm.play();\n                this.setState({slotState: 'slotting', number: null});\n    \n                setTimeout(() => {\n                    const numberSelect = closeState[Math.floor(Math.random()*closeState.length)].index;\n                    console.log(numberSelect + 1);\n                    this.setState({numberLog: [...this.state.numberLog, numberSelect]});\n                    this.setState({slotState: 'done', number: numberSelect});\n                    this.setState({bingoState: this.state.bingoState.map(d => {\n                        if(this.state.number !== null) {\n                            if(this.state.number === d.index) {\n                                return {open: true, index: d.index};\n                            } else {\n                                return d;\n                            }\n                        } else {\n                            return d;\n                        }\n                    })});\n                    this.saveLocalStorage();\n                }, 5500);\n                // }, 2000);\n            }\n        }\n    }\n\n    toggleState = content => {\n        const toggleIndex = parseInt(content.target.textContent) - 1;\n        this.setState({bingoState: this.state.bingoState.map(d => {\n            if(d.index === toggleIndex) {\n                return {open: !d.open, index: d.index};\n            } else {\n                return d;\n            }\n        })});\n        this.saveLocalStorage();\n    }\n\n    render() {\n        return  (\n            <div className=\"container center-align\">\n                <Slot state={this.state.slotState} number={this.state.number}/>\n                <div className=\"row\">\n                    <div className=\"col s4\"></div>\n                    <div className=\"col s4\">\n                        <button className=\"waves-effect waves-light red btn\" style={{width: '100%'}} onClick={this.clickHandler}>SPIN</button>\n                    </div>\n                    <div className=\"col s4\"></div>\n                </div>\n                <Bingo open={this.state.bingoState} toggle={this.toggleState}/>\n                <div className=\"row\">\n                    <div className=\"col s5\"></div>\n                    <div className=\"col s2\">\n                            <button className=\"waves-effect waves-light blue lighten-5 btn\" style={{width: '100%', color: '#1e88e5'}} onClick={this.clearState}>RESET</button>\n                    </div>\n                    <div className=\"col s5\"></div>\n                </div>\n                {/* <p>音楽：魔王魂</p> */}\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}